name: Create DigitalOcean Droplet and Run Script

on:
  workflow_dispatch:
    inputs:
      profile_type:
        description: "Profile Type"
        required: true
        default: "head"
        type: choice
        options:
          - head
      binary_version:
        description: "Binary Version e.g: v24.0.1 (If empty, will use mainnet RPC version. Also can be branch name)"
        required: false
      profile_duration:
        description: "Profile Duration in Seconds e.g: 3600 (Only used if Profile Type is 'head')"
        required: false

jobs:
  create-and-setup-droplet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install doctl
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.74.0/doctl-1.74.0-linux-amd64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin

      - name: Create Droplet
        id: create-droplet
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          droplet_id=$(doctl compute droplet create github-runner-droplet --region fra1 --size m3-4vcpu-32gb --image 153426037 --ssh-keys fb:ce:1d:9a:3d:ee:5f:19:46:85:6c:ff:2c:9c:04:81 --wait --format ID --no-header)
          echo "Droplet ID: $droplet_id"
          echo "DROPLET_ID=$droplet_id" >> $GITHUB_ENV

      - name: Get Droplet IP
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          droplet_ip=$(doctl compute droplet get ${{ env.DROPLET_ID }} --format PublicIPv4 --no-header)
          echo "Droplet IP: $droplet_ip"
          echo "DROPLET_IP=$droplet_ip" >> $GITHUB_ENV

      - name: Wait for SSH to be ready
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          echo "Waiting for SSH service to start..."
          until ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@${{ env.DROPLET_IP }} "echo 'SSH is now available'"
          do
             echo "SSH not ready yet, retrying..."
             sleep 10
          done

      - name: Copy and Run Script on Droplet
        id: script
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/ssh_key scripts/join_and_profile.sh root@${{ env.DROPLET_IP }}:/root/join_and_profile.sh
          ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@${{ env.DROPLET_IP }} \
          "bash /root/join_and_profile.sh \
          --profile-type ${{ github.event.inputs.profile_type }} \
          --binary-version '${{ github.event.inputs.binary_version }}' \
          --profile-duration '${{ github.event.inputs.profile_duration }}'"

      - name: Return pprof download links
        run: |
          echo "CPU profile link: ${{ steps.script.outputs.cpu_prof_link }}"
          echo "Heap profile link: ${{ steps.script.outputs.heap_prof_link }}"
          echo "Block profile link: ${{ steps.script.outputs.block_prof_link }}"
          echo "Mutex profile link: ${{ steps.script.outputs.mutex_prof_link }}"

      - name: Delete Droplet
        if: always()
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          doctl compute droplet delete ${{ env.DROPLET_ID }} --force
