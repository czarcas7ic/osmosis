name: Create DigitalOcean Droplet and Run Script

on:
  workflow_dispatch: # Allows manual trigger

jobs:
  create-and-setup-droplet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install doctl
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.74.0/doctl-1.74.0-linux-amd64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin

      - name: Create Droplet
        id: create-droplet
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          droplet_id=$(doctl compute droplet create github-runner-droplet --region fra1 --size m3-4vcpu-32gb --image 153426037 --wait --format ID --no-header)
          echo "Droplet ID: $droplet_id"
          echo "DROPLET_ID=$droplet_id" >> $GITHUB_ENV

      - name: Get Droplet IP
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          droplet_ip=$(doctl compute droplet get ${{ env.DROPLET_ID }} --format PublicIPv4 --no-header)
          echo "Droplet IP: $droplet_ip"
          echo "DROPLET_IP=$droplet_ip" >> $GITHUB_ENV

      - name: Wait for SSH to be ready
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          chmod 600 /tmp/ssh_key
          echo "$SSH_PRIVATE_KEY" > /tmp/ssh_key
          until ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@${{ env.DROPLET_IP }} "echo 'SSH is now available'"
          do
            echo "Waiting for SSH..."
            sleep 10
          done

      - name: Run Script on Droplet
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key root@${{ env.DROPLET_IP }} "/root/scripts/join.sh"
